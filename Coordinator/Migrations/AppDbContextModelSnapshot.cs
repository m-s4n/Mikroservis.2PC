// <auto-generated />
using System;
using Coordinator.Models.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Coordinator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Coordinator.Models.Node", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_nodes");

                    b.ToTable("nodes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad8cd0dd-20de-4a50-8963-e51b1f110edc"),
                            Name = "Order.API"
                        },
                        new
                        {
                            Id = new Guid("f39acc9d-2299-4ee8-9a76-f6809fabda9d"),
                            Name = "Stock.API"
                        },
                        new
                        {
                            Id = new Guid("c95b9428-1c85-45e5-8474-2751b0219d7b"),
                            Name = "Payment.API"
                        });
                });

            modelBuilder.Entity("Coordinator.Models.NodeState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("IsReady")
                        .HasColumnType("integer")
                        .HasColumnName("is_ready");

                    b.Property<Guid>("NodeId")
                        .HasColumnType("uuid")
                        .HasColumnName("node_id");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("transaction_id");

                    b.Property<int>("TransactionState")
                        .HasColumnType("integer")
                        .HasColumnName("transaction_state");

                    b.HasKey("Id")
                        .HasName("pk_nodes_state");

                    b.HasIndex("NodeId")
                        .HasDatabaseName("ix_nodes_state_node_id");

                    b.ToTable("nodes_state", (string)null);
                });

            modelBuilder.Entity("Coordinator.Models.NodeState", b =>
                {
                    b.HasOne("Coordinator.Models.Node", "Node")
                        .WithMany("NodeStates")
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_nodes_state_nodes_node_id");

                    b.Navigation("Node");
                });

            modelBuilder.Entity("Coordinator.Models.Node", b =>
                {
                    b.Navigation("NodeStates");
                });
#pragma warning restore 612, 618
        }
    }
}
